// Motor A (Left Motor) - TivaC and L298N connections
int enA = 40;   // Enable pin (PF2) for Left Motor (PWM control)
int in1 = 12;   // IN1 pin (PA3) for Left Motor direction
int in2 = 11;   // IN2 pin (PA2) for Left Motor direction

// Motor B (Right Motor) - TivaC and L298N connections
int enB = 25;   // Enable pin (PD2) for Right Motor (PWM control)
int in3 = 13;   // IN3 pin (PA4) for Right Motor direction
int in4 = 8;    // IN4 pin (PA5) for Right Motor direction

// Ultrasonic Sensor Pins
const int echo = 9, Trig = 10;  // Pin connections for HC-SR04

long duration, cm;  // To measure pulse width and distance in cm

void setup() {
    Serial.begin(115200); // Serial for debugging

    // Set motor control pins as OUTPUT
    pinMode(enA, OUTPUT);
    pinMode(in1, OUTPUT);
    pinMode(in2, OUTPUT);
    
    pinMode(enB, OUTPUT);
    pinMode(in3, OUTPUT);
    pinMode(in4, OUTPUT);

    // Set Ultrasonic pins
    pinMode(Trig, OUTPUT);
    pinMode(echo, INPUT);

    // Start moving forward
    moveForward();
}

void loop() {
    // Continuously check for obstacles
    Update_Ultra_Sonic();
    
    if (cm <= 20 && cm > 0) {  // If an object is detected within 20 cm
        stopMotors();}
       // delay(500); // Short stop
       //turnRight(); // Turn right
       // delay(1000); // Allow time for turning
      else{

        moveForward(); // Continue moving forward
    }

   // delay(200);  // Small delay before checking again
}

// Function to move both motors forward
void moveForward() {
    Serial.println("Moving Forward");

    digitalWrite(in1, HIGH);
    digitalWrite(in2, LOW);
    analogWrite(enA, 191);  // 50% Duty Cycle

    digitalWrite(in3, HIGH);
    digitalWrite(in4, LOW);
    analogWrite(enB, 71);  // 50% Duty Cycle
}

// Function to stop motors
void stopMotors() {
    Serial.println("Stopping Motors");

    digitalWrite(in1, LOW);
    digitalWrite(in2, LOW);
    analogWrite(enA, 0);

    digitalWrite(in3, LOW);
    digitalWrite(in4, LOW);
    analogWrite(enB, 0);
}

// Function to turn right
void turnRight() {
    Serial.println("Turning Right");

    digitalWrite(in1, LOW);
    digitalWrite(in2, HIGH);
    analogWrite(enA, 100);  // Reverse Left Motor

    digitalWrite(in3, HIGH);
    digitalWrite(in4, LOW);
    analogWrite(enB, 100);  // Keep Right Motor moving forward
}

// Function to update ultrasonic sensor reading
void Update_Ultra_Sonic() {
    digitalWrite(Trig, LOW);
    delayMicroseconds(2);
    digitalWrite(Trig, HIGH);
    delayMicroseconds(10);
    digitalWrite(Trig, LOW);

    duration = pulseIn(echo, HIGH);
    cm = microsecondsToCentimeters(duration);

    Serial.print("Distance: ");
    Serial.print(cm);
    Serial.println(" cm");
}

// Convert microseconds to centimeters
long microsecondsToCentimeters(long microseconds) {
    return (microseconds * 0.034) / 2; // Speed of sound conversion
}